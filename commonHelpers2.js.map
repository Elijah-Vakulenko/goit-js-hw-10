{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["//Імпорт бібліотеки повідомлень:\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n// Імпортую форму на яку буде виконуватися сабміт:\nconst form = document.querySelector('.form');\n\nconst notificationBtn = document.querySelector('button');\nnotificationBtn.className = 'notification-btn'; // Додаю клас ддля стилізації\n\nconst label = document.querySelector('.form label');\nlabel.className = 'form-label';\n\nconst input = document.querySelector('.form input[name=\"delay\"]');\ninput.className = 'input-field';\n\n\n//Далі створюю функції з алертами залежно від потреби\nfunction showIziToastFulfilledAlert(delay) {\n    iziToast.success({\n        timeout: delay,\n        message: `Fulfilled promise in ${delay}ms`,\n        position: \"topRight\",\n        messageColor: 'white',\n        backgroundColor: '#59A10D',\n        progressBarColor: '#326101',\n        class: 'iziToast-settings', //додаткову стилізацію запхнув сюди до класу в CSS\n      });}\n\nfunction showIziToastRejectedAlert(delay) {\n    iziToast.error({\n        timeout: delay,\n        message: `Rejected promise in ${delay}ms`,\n        position: \"topRight\",\n        messageColor: 'white',\n        backgroundColor: '#EF4040',\n        progressBarColor: '#B51B1B',\n        class: 'iziToast-settings', //додаткову стилізацію запхнув сюди до класу в CSS\n      });\n}\n\nfunction showIziToastCautionAlert() {\n      iziToast.warning({\n        message: 'The delay must be multiple of a 1000',\n        messageColor: 'white',\n        position: \"topRight\",\n        backgroundColor: '#FFA000',\n        progressBarColor: '#BB7B10',\n        class: 'iziToast-settings', //додаткову стилізацію запхнув сюди до класу в CSS\n      });\n}\n\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n    \n    const delay = parseInt(form.elements['delay'].value, 10);\n    const state = form.elements['state'].value;\n    \n    //Тут якщо я ввів число яке не кратне 1000 то при сабміті буде відповідне повідомлення\n    if (delay % 1000 !== 0) {\n        showIziToastCautionAlert();\n        return;\n    }\n    \n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (state === 'fulfilled') {\n                resolve(delay);\n            } else {\n                reject(delay);\n            }\n        }, delay);\n    });\n    \n    promise\n        .then((delay) => {\n            showIziToastFulfilledAlert(delay);\n        })\n        .catch((delay) => {\n            showIziToastRejectedAlert(delay);\n        });\n});"],"names":["form","notificationBtn","label","input","showIziToastFulfilledAlert","delay","iziToast","showIziToastRejectedAlert","showIziToastCautionAlert","event","state","resolve","reject"],"mappings":"mIAMA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAErCC,EAAkB,SAAS,cAAc,QAAQ,EACvDA,EAAgB,UAAY,mBAE5B,MAAMC,EAAQ,SAAS,cAAc,aAAa,EAClDA,EAAM,UAAY,aAElB,MAAMC,EAAQ,SAAS,cAAc,2BAA2B,EAChEA,EAAM,UAAY,cAIlB,SAASC,EAA2BC,EAAO,CACvCC,EAAS,QAAQ,CACb,QAASD,EACT,QAAS,wBAAwBA,CAAK,KACtC,SAAU,WACV,aAAc,QACd,gBAAiB,UACjB,iBAAkB,UAClB,MAAO,mBACR,CAAA,CAAE,CAET,SAASE,EAA0BF,EAAO,CACtCC,EAAS,MAAM,CACX,QAASD,EACT,QAAS,uBAAuBA,CAAK,KACrC,SAAU,WACV,aAAc,QACd,gBAAiB,UACjB,iBAAkB,UAClB,MAAO,mBACf,CAAO,CACP,CAEA,SAASG,GAA2B,CAC9BF,EAAS,QAAQ,CACf,QAAS,uCACT,aAAc,QACd,SAAU,WACV,gBAAiB,UACjB,iBAAkB,UAClB,MAAO,mBACf,CAAO,CACP,CAEAN,EAAK,iBAAiB,SAAWS,GAAU,CACvCA,EAAM,eAAc,EAEpB,MAAMJ,EAAQ,SAASL,EAAK,SAAS,MAAS,MAAO,EAAE,EACjDU,EAAQV,EAAK,SAAS,MAAS,MAGrC,GAAIK,EAAQ,MAAS,EAAG,CACpBG,IACA,MACH,CAEe,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC7C,WAAW,IAAM,CACTF,IAAU,YACVC,EAAQN,CAAK,EAEbO,EAAOP,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,EAGI,KAAMA,GAAU,CACbD,EAA2BC,CAAK,CAC5C,CAAS,EACA,MAAOA,GAAU,CACdE,EAA0BF,CAAK,CAC3C,CAAS,CACT,CAAC"}